// Generated by CoffeeScript 2.5.1
(function() {
  define(['underscore', 'knockout'], function(_, ko) {
    var ViewModel;
    ViewModel = (function() {
      var worker;

      class ViewModel {
        constructor() {
          var self;
          self = this;
          this.worker = new Worker('./js/worker.js');
          this.worker.onmessage = function(event) {
            self.total(event.data.total);
            self.found(event.data.words.length);
            return self.words(event.data.words);
          };
          this.loading = ko.computed(function() {
            return self.total === '';
          });
          this.wordsString = ko.computed(function() {
            return ViewModel.filter(self.words(), self.requiredLetters()).join(', ');
          }, self);
        }

        static filter(words, letters) {
          if (letters === '') {
            return words;
          }
          return _.filter(words, function(word) {
            var intersection, uniq;
            uniq = _.uniq(letters);
            intersection = _.intersection(word, uniq);
            return intersection.length === uniq.length;
          });
        }

        find(letters) {
          return this.worker.postMessage(letters);
        }

      };

      worker = void 0;

      ViewModel.prototype.total = ko.observable('');

      ViewModel.prototype.requiredLetters = ko.observable('');

      ViewModel.prototype.found = ko.observable(0);

      ViewModel.prototype.words = ko.observableArray([]);

      return ViewModel;

    }).call(this);
    return ViewModel;
  });

}).call(this);

//# sourceMappingURL=view-model.js.map
