//@ sourceMappingURL=trie-performance-test.map
// Generated by CoffeeScript 1.6.1
(function() {

  suite('Performance', function() {
    $.ajax({
      url: './en.txt',
      success: function(result) {
        return window.words = result.match(/[^\r\n]+/g);
      },
      async: false
    });
    suite('Trie', function() {
      var word, _i, _len;
      window.trie = new Cheat.Trie;
      for (_i = 0, _len = words.length; _i < _len; _i++) {
        word = words[_i];
        trie.append(word);
      }
      test('build trie', function() {
        var trie, _j, _len1, _results;
        trie = new Cheat.Trie;
        _results = [];
        for (_j = 0, _len1 = words.length; _j < _len1; _j++) {
          word = words[_j];
          _results.push(trie.append(word));
        }
        return _results;
      });
      test("find all words in trie by ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']", function() {
        var letters, words;
        letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
        words = trie.words(trie.group(letters));
        return console.log(words.length);
      });
      return test("find all words in trie by ['a','s','d','w','t','r','i','b','n','o','w','p','l','f','g','l','e','w','h','q','a','g','n','b','e']", function() {
        var letters, words;
        letters = ['a', 's', 'd', 'w', 't', 'r', 'i', 'b', 'n', 'o', 'w', 'p', 'l', 'f', 'g', 'l', 'e', 'w', 'h', 'q', 'a', 'g', 'n', 'b', 'e'];
        words = trie.words(trie.group(letters));
        return console.log(words.length);
      });
    });
    return suite('Array', function() {
      return test("find all words in array by ['a','b','c','d','e','f','g','h','i','j','k','l','m','n','o','p','q','r','s','t','u','v','w','x','y','z']", function() {
        var letters, result, word, _i, _len;
        letters = ['a', 'b', 'c', 'd', 'e', 'f', 'g', 'h', 'i', 'j', 'k', 'l', 'm', 'n', 'o', 'p', 'q', 'r', 's', 't', 'u', 'v', 'w', 'x', 'y', 'z'];
        result = [];
        for (_i = 0, _len = words.length; _i < _len; _i++) {
          word = words[_i];
          result.push(word.split('').sort());
        }
        return console.log(result);
      });
    });
  });

}).call(this);
