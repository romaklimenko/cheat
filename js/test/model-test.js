// Generated by CoffeeScript 2.5.1
(function() {
  define(['main', '../node_modules/chai/chai.js', 'model'], function(Main, Chai, Model) {
    var assert, expect;
    assert = Chai.assert;
    expect = Chai.expect;
    return describe("Model", function() {
      describe('@find(letters)', function() {
        return it('find all words by abcdefghijklmnopqrstuvwxyz', function() {
          var letters, words;
          letters = 'abcdefghijklmnopqrstuvwxyz';
          words = Model.find(letters);
          return assert.equal(words.length, 50902);
        });
      });
      describe('@word(word, letters)', function() {
        it("should return true if it's possible to compose a word from given letters", function() {
          var letters, word;
          letters = 'aesttz';
          word = 'test';
          word = Model.word(word, letters);
          return assert.isTrue(word);
        });
        return it("should return false if it isn't possible to compose a word from given letters", function() {
          var letters, word;
          letters = 'aestz';
          word = 'test';
          word = Model.word(word, letters);
          return assert.isFalse(word);
        });
      });
      return describe("@words()", function() {
        it("should return an array of words", function() {
          return assert.isArray(Model.words());
        });
        return it("should return a lot of words", function() {
          return assert.isTrue(Model.words().length >= 274892);
        });
      });
    });
  });

}).call(this);

//# sourceMappingURL=model-test.js.map
